#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();

#define SERVOMIN  150 // this is the 'minimum' pulse length count (out of 4096)
#define SERVOMAX  600 // this is the 'maximum' pulse length count (out of 4096)

// our servo # counter
uint8_t servonum = 0;
const int NUM_SERVOS = 6; //for first arm
int starting[NUM_SERVOS] = {180,85,110,118,90,90};
int starting2[NUM_SERVOS] = {0,90,112,110,90,90};

void setup() {

  Serial.begin(9600);
  Serial.println("16 channel Servo test!");
  pwm.begin();
  
  pwm.setPWMFreq(60);  // Analog servos run at ~60 Hz updates
  int pulselen;
  for (int servoIndex = 0; servoIndex < NUM_SERVOS; servoIndex++)
  {
    pulselen = map(starting[servoIndex],0,180,SERVOMIN,SERVOMAX);
    pwm.setPWM(servoIndex,0,pulselen);
    pulselen = map(starting2[servoIndex],0,180,SERVOMIN,SERVOMAX);
    pwm.setPWM(servoIndex+10,0,pulselen);
    delay(15);
  }
  delay(5000);
  // set wrist
  pulselen = map(170,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(4,0,pulselen);
  delay(2000);
  // close claw
  pulselen = map(98,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(5,0,pulselen);
  delay(1000);
  
  letterI();
  makeSpace();
  letterE();
  makeSpace();
  letterE();
  makeSpace();
  letterE();
  
}

void makeSpace()
{
  // new letter
  delay(3000);
  int pulselen = map(90,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(5,0,pulselen); // release knob
  delay(500);
  pulselen = map(175,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(4,0,pulselen); // rotate wrist
  delay(500);
  pulselen = map(98,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(5,0,pulselen); // grab knob
  delay(500);
  pulselen = map(14,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(4,0,pulselen); //scroll over
  delay(500);
  pulselen = map(90,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(5,0,pulselen); // release knob
  delay(500);
  pulselen = map(180,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(4,0,pulselen); // rotate wrist
  delay(500);
  pulselen = map(98,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(5,0,pulselen); // grab knob
  delay(500);
  
}

void letterI()
{
  // draw I
  int pulselen = map(30,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(4,0,pulselen);
  delay(500);
  pulselen = map(115,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(4,0,pulselen);
  delay(500);
  down();
  delay(500);
  pulselen = map(170,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(4,0,pulselen);
  delay(500);
  pulselen = map(30,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(4,0,pulselen);
}

void letterE()
{
  int pulselen;
  //draw E
  for (int i = 0; i < 2; i++)
  {
  pulselen = map(40,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(4,0,pulselen);
  delay(500); // horizontal forward
  pulselen = map(180,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(4,0,pulselen); // horizontal back
  down();
  }
  pulselen = map(40,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(4,0,pulselen);
  
}
void down()
{
  // vertical line
  delay(3000);
  int pulselen = map(90,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(15,0,pulselen); // release knob
  delay(500);
  pulselen = map(175,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(14,0,pulselen); // rotate wrist
  delay(500);
  pulselen = map(98,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(15,0,pulselen); // grab knob
  delay(500);
  pulselen = map(14,0,180,SERVOMIN,SERVOMAX);
  pwm.setPWM(14,0,pulselen); //scroll over
  delay(500);
}

void loop() 
{
}
